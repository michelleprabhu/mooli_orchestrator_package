version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: moolai-postgres
    environment:
      POSTGRES_USER: moolai
      POSTGRES_PASSWORD: moolai_password
      POSTGRES_DB: moolai_controller
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - moolai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U moolai"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Controller Backend (C-OCS + C-GUI integrated)
  controller:
    build:
      context: .
      dockerfile: Dockerfile.controller
    container_name: moolai-controller
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=moolai
      - DATABASE_PASSWORD=moolai_password
      - DATABASE_NAME=moolai_controller
      - CONTROLLER_HOST=0.0.0.0
      - CONTROLLER_PORT=8765
      - DEV_BEARER_TOKEN=fake-dev-token
      - HEARTBEAT_TTL_SEC=120
    ports:
      - "8765:8765"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - moolai-network
    restart: unless-stopped
    volumes:
      - ./controller/app/db/controller_config.json:/app/controller/app/db/controller_config.json

  # Frontend with Nginx
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: moolai-frontend
    ports:
      - "80:80"
    depends_on:
      - controller
    networks:
      - moolai-network
    restart: unless-stopped

networks:
  moolai-network:
    driver: bridge

volumes:
  postgres_data: